;; Object user_management/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "user_management/"
  :tables (list 
   (semanticdb-table "models.py"
    :major-mode 'python-mode
    :tags '(("django.db" include nil nil [1 29]) ("User" type (:superclasses ("models.Model") :members (("id" variable nil (reparse-symbol indented_block_body) [158 199]) ("userName" variable nil (reparse-symbol indented_block_body) [204 249]) ("email" variable nil (reparse-symbol indented_block_body) [254 281]) ("md5Passwd" variable nil (reparse-symbol indented_block_body) [286 331]) ("privacy" variable nil (reparse-symbol indented_block_body) [336 379])) :type "class") nil [128 380]))
    :file "models.py"
    :pointmax 380
    :unmatched-syntax 'nil
    )
   (semanticdb-table "tests.py"
    :major-mode 'python-mode
    :tags '(("\"\"\"
This file demonstrates two different styles of tests (one doctest and one
unittest). These will both pass when you run \"manage.py test\".

Replace these with more appropriate tests for your application.
\"\"\"" code nil nil [1 210]) ("django.test" include nil nil [212 244]) ("SimpleTest" type (:superclasses ("TestCase") :members (("test_basic_addition" function (:arguments (("self" variable nil (reparse-symbol function_parameters) [302 306]))) (reparse-symbol indented_block_body) [278 414])) :type "class") nil [246 414]))
    :file "tests.py"
    :pointmax 513
    :unmatched-syntax 'nil
    )
    (semanticdb-table "views.py"
    :major-mode 'python-mode
    :tags '(("django.shortcuts" include nil nil [1 48]) ("register" function (:arguments (("req" variable nil (reparse-symbol function_parameters) [63 66]))) nil [50 268]))
    :file "views.py"
    :pointmax 269
    :unmatched-syntax 'nil
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
